services:
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_NODENAME=rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq-setup.sh:/rabbitmq-setup.sh
    entrypoint: ["/bin/bash", "/rabbitmq-setup.sh"]
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 120s
    networks:
      - app-network

  app:
    image: nikiconluxury/super-scraper:latest
    ports:
      - "8007:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_USER=app_user
      - RABBITMQ_PASSWORD=app_password
      - RABBITMQ_VHOST=app_vhost
      - PORT=8080
    command: ["uv", "run", "python", "main.py"]
    networks:
      - app-network

  consumer:
    image: nikiconluxury/super-scraper:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_USER=app_user
      - RABBITMQ_PASSWORD=app_password
      - RABBITMQ_VHOST=app_vhost
      - DB_SERVER=<sql-server-host>
      - DB_NAME=<database-name>
      - DB_USER=<db-user>
      - DB_PASSWORD=<db-password>
    command: ["uv", "run", "python", "/app/rabbitmq/consumer.py"]
    networks:
      - app-network

volumes:
  rabbitmq-data:

networks:
  app-network:
    driver: bridge